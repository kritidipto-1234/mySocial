{"version":3,"sources":["pages/PasswordReset/css/PasswordReset.module.scss","pages/conversations/css/ChatBox.module.scss","config.js","reduxStore/index.js","assets/Notification.mp3","components/Message.js","contextStore/messageContext.js","contextStore/appContext.js","pages/landingPage/LandingPage.js","pages/conversations/Chat.js","pages/conversations/ChatBox.js","pages/conversations/FriendChatLink.js","pages/conversations/AllFriendsChatList.js","pages/conversations/Conversations.js","pages/myProfile/AccountSections.js","pages/myProfile/getCroppedImage.js","pages/myProfile/NonFriend.js","pages/myProfile/AllNonFriends.js","pages/myProfile/Friend.js","pages/myProfile/MyFriends.js","pages/myProfile/PendingRequest.js","pages/myProfile/PendingRequestList.js","pages/myProfile/MyProfile.js","pages/PasswordReset/PasswordReset.js","App.js","index.js","utils/catchAsync.js","pages/myProfile/css/MyProfile.module.scss","pages/conversations/css/Conversations.module.scss","pages/conversations/css/FriendChatLink.module.scss","pages/conversations/css/Chat.module.scss","pages/conversations/css/AllFriendsChatList.module.scss","pages/landingPage/css/LandingPage.module.scss","components/css/Message.module.scss","pages/myProfile/css/AllNonFriends.module.scss","pages/myProfile/css/MyFriends.module.scss","pages/myProfile/css/Friend.module.scss","pages/myProfile/css/PendingRequestList.module.scss","pages/myProfile/css/PendingRequest.module.scss","pages/myProfile/css/NonFriend.module.scss","pages/myProfile/css/AccountSection.module.scss"],"names":["module","exports","config","url","initialUserState","jwtToken","currentUser","friends","initialChatState","unreadChats","onlineUsers","chattingWith","lastChatTimes","initialState","chat","user","actions","actionCreators","fetchUnreadChats","catchAsync","dispatch","getState","a","axios","withCredentials","method","res","data","status","type","fetchOnlineUsers","fetchFriends","fetchLastChatTimes","tryFetchUserByStorageToken","reducer","combineReducers","state","action","newState","cloneDeep","sender","newChat","friendId","time","String","_id","undefined","store","window","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","applyMiddleware","thunk","Message","props","msgContext","useContext","MessageContext","className","styles","isErrorMessage","errorMessage","normalMessage","onClick","closeMessage","CloseBtn","message","React","createContext","displayMessage","duration","MessageContextProvider","useState","setMessage","isMessageDisplayed","setIsMessageDisplayed","setIsErrorMessage","timeoutRef","useRef","useCallback","clearTimeout","current","setTimeout","value","useMemo","Provider","children","AppContext","socket","initializeNewSocket","removeSocket","audio","Audio","notificationSound","AppContextProvider","setSocket","setIsSocketConnected","useSelector","shallowEqual","useDispatch","useEffect","on","err","includes","io","removeAllListeners","msg","receiver","play","auth","disconnect","LandingPage","emailInputRef","passwordInputRef","passwordConfirmInputRef","nameInputRef","descriptionInputRef","history","useHistory","messageCtx","formType","setFormType","initializeUserSession","replace","loginHandler","e","preventDefault","email","password","Error","response","signUpHandler","name","description","passwordConfirm","forgotPasswordHandler","container","onSubmit","ref","placeholder","buttonContainer","iconCredits","href","title","Chat","align","otherUser","d","Date","formattedDate","getHours","getMinutes","toLocaleDateString","chatContainer","chatContent","content","chatTime","ChatBox","inputMsgRef","chats","setChats","messagesEndRef","scrollToBottom","scrollIntoView","behavior","block","fetchChats","sendChatAsRead","length","chatMessageHandler","prev","off","focus","chatBoxMessage","chatBoxHeader","clearChattingWithBtn","src","photo","alt","chatMessageList","map","c","i","chatSender","trim","emit","chatInput","chatSendBtn","FriendChatLink","friend","setFriend","fetchFriendInfo","isOnline","pendingChatCount","userLinkLeft","friendChatInfo","onlineIndicator","AllFriendsChatList","searchKey","setSearchKey","friendNames","setFriendNames","fetchFriendNames","sectionHeader","friendFilter","onChange","target","userList","filter","fid","toLowerCase","sort","id1","id2","time1","time2","noFriendMessage","Conversations","appCtx","navbar","pageHeader","activeUser","profileLink","to","Container","connected","notConnectedMessage","SpinnerCircular","enabled","cropper","AccountSection","formState","setFormState","isDeleteFormOpen","setIsDeleteFormOpen","croppedImageUrl","setCroppedImageUrl","loadCount","setLoadCount","selectedImageUrl","setSelectedImageUrl","nameRef","emailRef","descriptionRef","passwordRef","overlayRef","cancelBtnRef","passwordDeleteRef","photoRef","cropperRef","fetchUserInfo","destroy","Cropper","aspectRatio","zoomable","scalable","crop","canvas","getCroppedCanvas","toDataURL","sendFormData","formData","closeDeleteForm","deleteAccountHandler","heading","detailField","profilePic","croppedPic","cropperContainer","onLoad","p","files","startsWith","imageUrl","URL","createObjectURL","accept","form","FormData","append","dataURI","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","charCodeAt","Blob","dataURItoBlob","overlay","deleteForm","deleteFormBtn","NonFriend","nonFriend","setNonFriend","changeRenderToken","MyProfileContext","userId","sendFriendRequest","targetId","fetchNonFriends","leftSide","AllNonFriends","nonFriendList","setNonFriendList","renderToken","nonFriends","listHeading","nonFriendsList","id","Friend","deleteFriend","negativeBtn","MyFriends","friendsList","PendingRequest","setSender","request","fetchSenderInfo","acknowledgeFriendRequest","getPendingFriendRequests","bind","PendingRequestList","requestList","setRequestList","pendingRequests","r","MyProfile","setRenderToken","logoutHandler","totalUnreadChats","Object","values","reduce","sum","navBarBtn","friendSection","friendSectionFlexContainer","PasswordReset","newPasswordRef","newPasswordConfirmRef","params","useParams","submitNewPassword","passwordResetToken","App","isEqual","location","useLocation","pathname","loadingUser","setLoadingUser","then","catch","path","exact","component","ReactDOM","render","document","getElementById","f"],"mappings":"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","file":"static/js/main.fd50a0c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PasswordReset\":\"PasswordReset_PasswordReset__heluq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatBox\":\"ChatBox_ChatBox__3S3kS\",\"chatBoxMessage\":\"ChatBox_chatBoxMessage__1wEvF\",\"chatBoxHeader\":\"ChatBox_chatBoxHeader__1oXn0\",\"clearChattingWithBtn\":\"ChatBox_clearChattingWithBtn__2wfLM\",\"Offline\":\"ChatBox_Offline__1U_FC\",\"Online\":\"ChatBox_Online__3-nkK\",\"chatMessageList\":\"ChatBox_chatMessageList__2vu_M\",\"chatSender\":\"ChatBox_chatSender__4UWd6\",\"container\":\"ChatBox_container__JVy43\",\"chatInput\":\"ChatBox_chatInput__1nmQb\",\"chatSendBtn\":\"ChatBox_chatSendBtn__1HLLu\"};","const config = {\n    // url: \"http://127.0.0.1:5000\",\n    url: \"\",\n};\n\nexport default config;\n","import cloneDeep from \"clone-deep\";\nimport thunk from \"redux-thunk\";\nimport { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport catchAsync from \"../utils/catchAsync\";\nimport axios from \"axios\";\nimport config from \"../config\";\n\nconst initialUserState = { jwtToken: null, currentUser: null, friends: [] };\nconst initialChatState = {\n    unreadChats: {},\n    onlineUsers: [],\n    chattingWith: null,\n    lastChatTimes: {},\n};\nconst initialState = { chat: initialChatState, user: initialUserState };\n\nconst actions = {\n    LOGIN_USER: \"loginUser\",\n    SET_JWTTOKEN: \"setjwtToken\",\n    LOGOUT_USER: \"logoutUser\",\n    SET_UNREADCHATS: \"setUnreadChats\",\n    SET_ONLINEUSERS: \"setOnlineUsers\",\n    SET_FRIENDS: \"setFriends\",\n    SET_CHATTINGWITH: \"setChattingWith\",\n    ADD_UNREADCHAT: \"addUnreadChat\",\n    MARK_CURRENT_CONVERSATION_AS_READ: \"markCurrentConversationAsRead\",\n    SET_LAST_CHAT_TIMES: \"setLastChatTimes\",\n    UPDATE_LAST_CHAT_TIMES: \"updateLastChatTimes\",\n    SET_USER: \"setUser\",\n};\n\nconst actionCreators = {\n    fetchUnreadChats: () => {\n        return catchAsync(async (dispatch, getState) => {\n            const res = await axios({\n                withCredentials: true,\n                method: \"GET\",\n                url: `${config.url}/api/chats/getUnreadChats`,\n            });\n\n            if (res.data.status === \"success\")\n                dispatch({\n                    type: actions.SET_UNREADCHATS,\n                    unreadChats: res.data.unreadChats,\n                });\n        });\n    },\n    fetchOnlineUsers: () => {\n        return catchAsync(async (dispatch, getState) => {\n            const res = await axios({\n                withCredentials: true,\n                method: \"GET\",\n                url: `${config.url}/api/chats/getOnlineUsers`,\n            });\n\n            if (res.data.status === \"success\")\n                dispatch({\n                    type: actions.SET_ONLINEUSERS,\n                    onlineUsers: res.data.onlineUsers,\n                });\n        });\n    },\n    fetchFriends: () => {\n        return catchAsync(async (dispatch, getState) => {\n            const res = await axios({\n                withCredentials: true,\n                method: \"GET\",\n                url: `${config.url}/api/friendships/getAllFriends`,\n            });\n\n            if (res.data.status === \"success\")\n                dispatch({\n                    type: actions.SET_FRIENDS,\n                    friends: res.data.friends,\n                });\n\n            return { 112: \"nunu\" };\n        });\n    },\n    fetchLastChatTimes: () => {\n        return catchAsync(async (dispatch, getState) => {\n            const res = await axios({\n                withCredentials: true,\n                method: \"GET\",\n                url: `${config.url}/api/chats/getLastChatTimes`,\n            });\n\n            if (res.data.status === \"success\")\n                dispatch({\n                    type: actions.SET_LAST_CHAT_TIMES,\n                    lastChatTimes: res.data.lastChatTimes,\n                });\n        });\n    },\n    tryFetchUserByStorageToken: () => {\n        return async (dispatch, getState) => {\n            try {\n                const res = await axios({\n                    withCredentials: true,\n                    method: \"GET\",\n                    url: `${config.url}/api/users/validateLoginToken`,\n                });\n\n                if (res.data.status === \"success\") {\n                    dispatch({\n                        type: actions.LOGIN_USER,\n                        user: { ...res.data.user },\n                        jwtToken: res.data.jwtToken,\n                    });\n                    await dispatch(actionCreators.fetchUnreadChats());\n                    await dispatch(actionCreators.fetchOnlineUsers());\n                    await dispatch(actionCreators.fetchFriends());\n                    await dispatch(actionCreators.fetchLastChatTimes());\n                }\n            } catch (e) {\n                throw e;\n            }\n        };\n    },\n};\n\nfunction chatReducer(state = initialChatState, action) {\n    const newState = cloneDeep(state);\n\n    switch (action.type) {\n        case actions.SET_ONLINEUSERS:\n            newState.onlineUsers = cloneDeep(action.onlineUsers);\n            break;\n\n        case actions.SET_UNREADCHATS:\n            newState.unreadChats = cloneDeep(action.unreadChats);\n            break;\n\n        case actions.SET_CHATTINGWITH:\n            newState.chattingWith = cloneDeep(action.chattingWith);\n            break;\n\n        case actions.ADD_UNREADCHAT:\n            const sender = action.newChat.sender;\n            if (newState.unreadChats[sender]) newState.unreadChats[sender]++;\n            else newState.unreadChats[sender] = 1;\n            break;\n\n        case actions.SET_LAST_CHAT_TIMES:\n            newState.lastChatTimes = action.lastChatTimes;\n            break;\n\n        case actions.UPDATE_LAST_CHAT_TIMES:\n            newState.lastChatTimes[action.friendId] = action.time;\n            break;\n\n        case actions.MARK_CURRENT_CONVERSATION_AS_READ:\n            delete newState.unreadChats[String(newState.chattingWith._id)];\n            break;\n\n        case actions.LOGOUT_USER:\n            newState.unreadChats = {};\n            newState.onlineUsers = [];\n            newState.chattingWith = undefined;\n            newState.lastChatTimes = {};\n            break;\n\n        default:\n    }\n\n    return newState;\n}\n\nfunction userReducer(state = initialUserState, action) {\n    const newState = cloneDeep(state);\n\n    switch (action.type) {\n        case actions.LOGIN_USER:\n            newState.currentUser = cloneDeep(action.user);\n            newState.jwtToken = action.jwtToken;\n            break;\n\n        case actions.SET_USER:\n            newState.currentUser = cloneDeep(action.user);\n            break;\n\n        case actions.SET_JWTTOKEN:\n            newState.jwtToken = action.jwtToken;\n            break;\n\n        case actions.SET_FRIENDS:\n            newState.friends = cloneDeep(action.friends);\n            break;\n\n        case actions.LOGOUT_USER:\n            newState.currentUser = undefined;\n            newState.jwtToken = \"random-invalid-jwt\";\n            newState.friends = [];\n            break;\n\n        default:\n    }\n\n    return newState;\n}\n\nconst reducer = combineReducers({ chat: chatReducer, user: userReducer });\nconst reduxDevToolEnabler =\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(\n    reducer,\n    initialState,\n    compose(applyMiddleware(thunk))\n);\n\nexport default store;\nexport { actions, actionCreators };\n","export default __webpack_public_path__ + \"static/media/Notification.9d74f5ad.mp3\";","import React, { useContext } from \"react\";\nimport { MessageContext } from \"../contextStore/messageContext\";\nimport styles from \"./css/Message.module.scss\";\n\nfunction Message(props) {\n    const msgContext = useContext(MessageContext);\n\n    const className =\n        styles.Message +\n        \" \" +\n        (msgContext.isErrorMessage\n            ? styles.errorMessage\n            : styles.normalMessage);\n\n    return (\n        <div className={className}>\n            <button\n                onClick={msgContext.closeMessage}\n                className={styles.CloseBtn}\n            >\n                X\n            </button>\n            {msgContext.message}\n        </div>\n    );\n}\n\nexport default Message;\n","import React, { useState, useRef, useCallback, useMemo } from \"react\";\nimport Message from \"../components/Message\";\n\nconst MessageContext = React.createContext({\n    message: undefined,\n    isErrorMessage: undefined,\n    displayMessage: (message, isErrorMessage, duration) => {},\n    closeMessage: () => {},\n});\n\nfunction MessageContextProvider(props) {\n    const [message, setMessage] = useState(\"\");\n    const [isMessageDisplayed, setIsMessageDisplayed] = useState(false);\n    const [isErrorMessage, setIsErrorMessage] = useState(false);\n\n    const timeoutRef = useRef(undefined);\n\n    const displayMessage = useCallback(\n        (message, isErrorMessage = false, duration = 4000) => {\n            clearTimeout(timeoutRef.current);\n            setMessage(message);\n            setIsErrorMessage(isErrorMessage);\n            setIsMessageDisplayed(true);\n            timeoutRef.current = setTimeout(() => {\n                setIsMessageDisplayed(false);\n                setMessage(\"\");\n                setIsErrorMessage(false);\n            }, duration);\n        },\n        []\n    );\n\n    const closeMessage = useCallback(() => {\n        setIsMessageDisplayed(false);\n        setMessage(\"\");\n        setIsErrorMessage(false);\n        clearTimeout(timeoutRef.current);\n    }, []);\n\n    const value = useMemo(() => {\n        return {\n            message,\n            isErrorMessage,\n            displayMessage,\n            closeMessage,\n        };\n    }, [message, isErrorMessage, displayMessage, closeMessage]);\n\n    return (\n        <MessageContext.Provider value={value}>\n            {props.children}\n            {isMessageDisplayed && <Message />}\n        </MessageContext.Provider>\n    );\n}\n\nexport { MessageContext, MessageContextProvider };\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators, actions } from \"../reduxStore\";\nimport notificationSound from \"../assets/Notification.mp3\";\nimport io from \"socket.io-client\";\nimport config from \"../config\";\nimport { MessageContext } from \"./messageContext\";\n\nconst AppContext = React.createContext({\n    socket: undefined,\n    initializeNewSocket: () => {},\n    removeSocket: () => {},\n});\n\nconst audio = new Audio(notificationSound);\n\nfunction AppContextProvider(props) {\n    const [socket, setSocket] = useState(undefined);\n    const [isSocketConnected, setIsSocketConnected] = useState(false);\n\n    const chattingWith = useSelector(\n        (state) => state.chat.chattingWith,\n        shallowEqual\n    );\n    const currentUser = useSelector(\n        (state) => state.user.currentUser,\n        shallowEqual\n    );\n    const jwtToken = useSelector((state) => state.user.jwtToken);\n\n    const dispatch = useDispatch();\n    const { displayMessage } = useContext(MessageContext);\n\n    useEffect(() => {\n        if (!socket) return;\n\n        socket.on(\"connect\", () => {\n            // console.log(`Connected with socket id : ${socket.id}`);\n            setIsSocketConnected(true);\n        });\n\n        socket.on(\"connect_error\", (err) => {\n            let message = err.message;\n            if (message.includes(\"xhr poll error\"))\n                message =\n                    \"Attempt to reconnect failed.Please check ur internet\";\n            displayMessage(message, true);\n        });\n\n        socket.on(\"auth_error\", (err) => {\n            displayMessage(err.message, true);\n        });\n\n        socket.on(\"updateOnlineUserList\", (onlineUsers) => {\n            dispatch({ type: actions.SET_ONLINEUSERS, onlineUsers });\n        });\n\n        socket.on(\"disconnect\", () => {\n            // console.log(\"Disconnecting\");\n            displayMessage(\"Going Offline\");\n            setIsSocketConnected(false);\n        });\n\n        socket.io.on(\"reconnect\", () => {\n            displayMessage(`Reconnected.Fetching latest data `);\n            dispatch(actionCreators.fetchFriends());\n            dispatch(actionCreators.fetchOnlineUsers());\n            dispatch(actionCreators.fetchUnreadChats());\n            dispatch(actionCreators.fetchLastChatTimes());\n        });\n\n        return () => {\n            socket.removeAllListeners();\n        };\n    }, [socket, dispatch]);\n\n    useEffect(() => {\n        if (!socket || !currentUser) return;\n        //we might have missed some events during re rendering(removeAllListeners)\n        //so we need to fetch latest data from server manually\n        dispatch(actionCreators.fetchFriends());\n        dispatch(actionCreators.fetchOnlineUsers());\n        dispatch(actionCreators.fetchUnreadChats());\n        dispatch(actionCreators.fetchLastChatTimes());\n\n        socket.on(\"chatMessage\", (msg) => {\n            const { time } = msg;\n            let friendId;\n            if (msg.sender === String(currentUser._id)) friendId = msg.receiver;\n            if (msg.receiver === String(currentUser._id)) friendId = msg.sender;\n\n            dispatch({ type: actions.UPDATE_LAST_CHAT_TIMES, friendId, time });\n\n            if (msg.sender !== String(currentUser._id)) audio.play();\n        });\n\n        socket.on(\"chatMessage\", (msg) => {\n            //Here we only need to react to messages from\n            //friends apart  from the one user is chatting with\n            //these messages become unread\n            if (\n                (chattingWith &&\n                    String(chattingWith._id) === String(msg.sender)) ||\n                String(currentUser._id) === String(msg.sender)\n            )\n                return;\n            dispatch({ type: actions.ADD_UNREADCHAT, newChat: msg });\n        });\n\n        return () => {\n            socket.removeAllListeners(\"chatMessage\");\n        };\n    }, [socket, dispatch, chattingWith, currentUser]);\n\n    const initializeNewSocket = useCallback(() => {\n        const socket = io(config.url, { auth: { jwtToken } });\n        setSocket(socket);\n    }, [jwtToken]);\n\n    const removeSocket = useCallback(() => {\n        socket.disconnect();\n        socket.removeAllListeners();\n        setSocket(undefined);\n    }, [socket]);\n\n    return (\n        <AppContext.Provider\n            value={{\n                socket,\n                initializeNewSocket,\n                removeSocket,\n            }}\n        >\n            {props.children}\n        </AppContext.Provider>\n    );\n}\n\nexport { AppContext, AppContextProvider };\n","import React, { useContext, useEffect, useState } from \"react\";\nimport styles from \"./css/LandingPage.module.scss\";\nimport axios from \"axios\";\nimport config from \"../../config\";\nimport { useHistory } from \"react-router-dom\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { actions } from \"../../reduxStore/index\";\nimport { AppContext } from \"../../contextStore/appContext\";\nimport { MessageContext } from \"../../contextStore/messageContext\";\n\nfunction LandingPage() {\n    const dispatch = useDispatch();\n    const emailInputRef = React.useRef();\n    const passwordInputRef = React.useRef();\n    const passwordConfirmInputRef = React.useRef();\n    const nameInputRef = React.useRef();\n    const descriptionInputRef = React.useRef();\n    const history = useHistory();\n    const messageCtx = useContext(MessageContext);\n    const currentUser = useSelector(\n        (state) => state.user.currentUser,\n        shallowEqual\n    );\n    const [formType, setFormType] = useState(\"login\");\n\n    function initializeUserSession(data) {\n        dispatch({\n            type: actions.LOGIN_USER,\n            user: { ...data.user },\n            jwtToken: data.jwtToken,\n        });\n        history.replace(\"/conversations\");\n    }\n\n    useEffect(() => {\n        // if auto login succesfull redirect\n        if (currentUser) history.replace(\"/conversations\");\n    }, [currentUser, history]);\n\n    const loginHandler = async (e) => {\n        try {\n            e.preventDefault();\n\n            const res = await axios({\n                withCredentials: true,\n                method: \"POST\",\n                url: `${config.url}/api/users/signIn`,\n                data: {\n                    email: emailInputRef.current.value,\n                    password: passwordInputRef.current.value,\n                },\n            });\n\n            if (res.data.status === \"success\") {\n                initializeUserSession(res.data);\n                messageCtx.displayMessage(\"Welcome back\");\n            } else throw new Error(res);\n        } catch (e) {\n            messageCtx.displayMessage(e.response.data.message, true);\n        }\n    };\n\n    const signUpHandler = async (e) => {\n        try {\n            e.preventDefault();\n\n            const res = await axios({\n                withCredentials: true,\n                method: \"POST\",\n                url: `${config.url}/api/users/signUp`,\n                data: {\n                    email: emailInputRef.current.value,\n                    name: nameInputRef.current.value,\n                    description: descriptionInputRef.current.value,\n                    password: passwordInputRef.current.value,\n                    passwordConfirm: passwordConfirmInputRef.current.value,\n                },\n            });\n\n            if (res.data.status === \"success\") {\n                initializeUserSession(res.data);\n                messageCtx.displayMessage(\"Welcome to your account\");\n            } else throw new Error(res);\n        } catch (e) {\n            messageCtx.displayMessage(e.response.data.message, true);\n        }\n    };\n\n    const forgotPasswordHandler = async (e) => {\n        try {\n            e.preventDefault();\n\n            const res = await axios({\n                withCredentials: true,\n                method: \"POST\",\n                url: `${config.url}/api/users/forgotPassword`,\n                data: {\n                    email: emailInputRef.current.value,\n                },\n            });\n\n            if (res.data.status === \"success\") {\n                messageCtx.displayMessage(\"Reset password mail send\");\n            } else throw new Error(res);\n        } catch (e) {\n            messageCtx.displayMessage(e.response.data.message, true);\n        }\n    };\n\n    return (\n        <div className={styles.LandingPage}>\n            <div className={styles.container}>\n                {formType === \"login\" && (\n                    <form onSubmit={loginHandler}>\n                        <input ref={emailInputRef} placeholder=\"Email\" />\n                        <input ref={passwordInputRef} placeholder=\"Password\" />\n                        <button type=\"submit\">Login</button>\n                    </form>\n                )}\n                {formType === \"signUp\" && (\n                    <form onSubmit={signUpHandler}>\n                        <input ref={emailInputRef} placeholder=\"Email\" />\n                        <input ref={nameInputRef} placeholder=\"Name\" />\n                        <input\n                            ref={descriptionInputRef}\n                            placeholder=\"Description\"\n                        />\n                        <input ref={passwordInputRef} placeholder=\"Password\" />\n                        <input\n                            ref={passwordConfirmInputRef}\n                            placeholder=\"Password Confirm\"\n                        />\n                        <button type=\"submit\">Create Account</button>\n                    </form>\n                )}\n                {formType === \"forgotPassword\" && (\n                    <form onSubmit={forgotPasswordHandler}>\n                        <input ref={emailInputRef} placeholder=\"Email\" />\n                        <button type=\"submit\">Send Reset Email</button>\n                    </form>\n                )}\n                <div className={styles.buttonContainer}>\n                    {formType !== \"login\" && (\n                        <button onClick={() => setFormType(\"login\")}>\n                            Login\n                        </button>\n                    )}\n                    {formType !== \"signUp\" && (\n                        <button onClick={() => setFormType(\"signUp\")}>\n                            SignUp\n                        </button>\n                    )}\n                    {formType !== \"forgotPassword\" && (\n                        <button onClick={() => setFormType(\"forgotPassword\")}>\n                            Forgot Password\n                        </button>\n                    )}\n                </div>\n            </div>\n            <div className={styles.iconCredits}>\n                Icons made by{\" \"}\n                <a\n                    href=\"https://www.flaticon.com/authors/becris\"\n                    title=\"Becris\"\n                >\n                    Becris\n                </a>{\" \"}\n                from{\" \"}\n                <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n                    www.flaticon.com\n                </a>\n            </div>\n        </div>\n    );\n}\n\nexport default LandingPage;\n","import React from \"react\";\nimport styles from \"./css/Chat.module.scss\";\nimport { useSelector } from \"react-redux\";\n\nfunction Chat(props) {\n    let align, sender;\n    const user = useSelector((state) => state.user.currentUser);\n\n    if (user._id === props.chat.sender) {\n        sender = \"Me\";\n        align = \"me\";\n    } else {\n        sender = props.otherUser.name;\n        align = \"other\";\n    }\n\n    const d = new Date(props.chat.time);\n    const formattedDate = ` ${d.getHours()}:${d.getMinutes()} -  ${d.toLocaleDateString()} `;\n    return (\n        <div className={`${styles.chatContainer} ${styles[align]}`}>\n            <div className={styles.Chat}>\n                <div className={styles.chatContent}>{props.chat.content}</div>\n                <div className={styles.chatTime}>{formattedDate}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;\n","import React, {\n    useState,\n    useCallback,\n    useContext,\n    useEffect,\n    useRef,\n} from \"react\";\nimport styles from \"./css/ChatBox.module.scss\";\nimport Chat from \"./Chat\";\nimport axios from \"axios\";\nimport config from \"../../config\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport { AppContext } from \"../../contextStore/appContext\";\nimport catchAsync from \"../../utils/catchAsync\";\nimport { actions } from \"../../reduxStore\";\nimport { FaArrowLeft } from \"react-icons/fa\";\n\nfunction ChatBox() {\n    const inputMsgRef = useRef();\n    const [chats, setChats] = useState([]);\n    const currentUser = useSelector(\n        (state) => state.user.currentUser,\n        shallowEqual\n    );\n    const chattingWith = useSelector(\n        (state) => state.chat.chattingWith,\n        shallowEqual\n    );\n    const onlineUsers = useSelector(\n        (state) => state.chat.onlineUsers,\n        shallowEqual\n    );\n    const jwtToken = useSelector((state) => state.user.jwtToken);\n    const messagesEndRef = useRef(null);\n    const { socket } = useContext(AppContext);\n    const dispatch = useDispatch();\n    const scrollToBottom = useCallback(() => {\n        messagesEndRef.current?.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"start\",\n        });\n    }, []);\n\n    const fetchChats = useCallback(\n        catchAsync(async () => {\n            const res = await axios({\n                withCredentials: true,\n                method: \"GET\",\n                url: `${config.url}/api/chats/getChatsWith/${chattingWith._id}`,\n            });\n\n            if (res.data.status === \"success\") {\n                setChats([...res.data.chats]);\n                dispatch({ type: actions.MARK_CURRENT_CONVERSATION_AS_READ });\n            }\n        }),\n        [chattingWith?._id]\n    );\n\n    const sendChatAsRead = useCallback(\n        catchAsync(async (chat) => {\n            await axios({\n                withCredentials: true,\n                method: \"PATCH\",\n                url: `${config.url}/api/chats/markChatAsRead/${chat._id}`,\n            });\n        }),\n        []\n    );\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [chats.length, scrollToBottom]);\n\n    useEffect(() => {\n        if (!chattingWith || !socket) return;\n        const chatMessageHandler = (newChat) => {\n            //Here we only need to react to messages like chattingWith->user\n            //or user->chattingWith\n            //these messages become read\n            if (\n                String(chattingWith._id) === String(newChat.sender) ||\n                (String(currentUser._id) === String(newChat.sender) &&\n                    String(chattingWith._id) === String(newChat.receiver))\n            ) {\n                setChats((prev) => [...prev, newChat]);\n                if (String(chattingWith._id) === String(newChat.sender))\n                    sendChatAsRead(newChat);\n            }\n        };\n\n        socket.on(\"chatMessage\", chatMessageHandler);\n        return () => socket.off(\"chatMessage\", chatMessageHandler);\n    }, [chattingWith, sendChatAsRead, currentUser, socket]);\n\n    useEffect(() => {\n        if (!chattingWith) return;\n        setChats([]);\n        fetchChats();\n        inputMsgRef.current.focus();\n    }, [chattingWith, fetchChats]);\n\n    useEffect(() => {\n        return () => {\n            dispatch({\n                type: actions.SET_CHATTINGWITH,\n                chattingWith: undefined,\n            });\n        };\n    }, [dispatch]);\n\n    function sendMessage(e) {\n        e.preventDefault();\n        if (inputMsgRef.current.value.trim() === \"\") return;\n        const time = new Date();\n        const newChat = {\n            sender: currentUser._id,\n            receiver: chattingWith._id,\n            content: inputMsgRef.current.value,\n            time,\n        };\n        setChats((prev) => [...prev, newChat]);\n        socket.emit(\"chatMessage\", {\n            auth: { jwtToken },\n            msg: newChat,\n        });\n        dispatch({\n            type: actions.UPDATE_LAST_CHAT_TIMES,\n            friendId: chattingWith._id,\n            time,\n        });\n        inputMsgRef.current.value = \"\";\n        inputMsgRef.current.focus();\n    }\n\n    function clearChattingWith() {\n        dispatch({ type: actions.SET_CHATTINGWITH, chattingWith: null });\n    }\n\n    if (!chattingWith)\n        return (\n            <div className={styles.ChatBox}>\n                <div className={styles.chatBoxMessage}>\n                    Click on a user to chat with them\n                </div>\n            </div>\n        );\n\n    let status = \"Offline\";\n    if (onlineUsers.includes(chattingWith._id)) status = \"Online\";\n\n    return (\n        <div className={styles.ChatBox}>\n            <div className={styles.chatBoxHeader}>\n                <button\n                    className={styles.clearChattingWithBtn}\n                    onClick={clearChattingWith}\n                >\n                    <FaArrowLeft />\n                </button>\n                <img src={chattingWith.photo} alt=\"profile\" />\n                <span>\n                    {chattingWith.name || \"Loading\"}\n                    <br />\n                    <span className={styles[status]}>{status}</span>\n                </span>\n            </div>\n            <div className={styles.chatMessageList}>\n                {chats.map((c, i) => (\n                    <Chat otherUser={chattingWith} key={i} chat={c} />\n                ))}\n                <div ref={messagesEndRef} />\n            </div>\n            <form className={styles.chatSender} onSubmit={sendMessage}>\n                <div className={styles.container}>\n                    <input\n                        className={styles.chatInput}\n                        placeholder=\"Type message here and press send \"\n                        ref={inputMsgRef}\n                    />\n                    <button className={styles.chatSendBtn} type=\"submit\">\n                        Send\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default ChatBox;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styles from \"./css/FriendChatLink.module.scss\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport catchAsync from \"../../utils/catchAsync\";\nimport config from \"../../config\";\nimport axios from \"axios\";\nimport { FaInfoCircle } from \"react-icons/fa\";\nimport { actions } from \"../../reduxStore\";\n\nfunction FriendChatLink(props) {\n    const [friend, setFriend] = useState();\n    const onlineUsers = useSelector(\n        (state) => state.chat.onlineUsers,\n        shallowEqual\n    );\n    const unreadChats = useSelector(\n        (state) => state.chat.unreadChats,\n        shallowEqual\n    );\n    const chattingWith = useSelector(\n        (state) => state.chat.chattingWith,\n        shallowEqual\n    );\n    const dispatch = useDispatch();\n\n    const fetchFriendInfo = useCallback(\n        catchAsync(async function () {\n            const res = await axios({\n                withCredentials: true,\n                method: \"GET\",\n                url: `${config.url}/api/users/getUserDetails/${props.friendId}`,\n            });\n\n            if (res.data.status === \"success\") {\n                setFriend(res.data.user);\n            } else throw new Error(res);\n        }),\n        []\n    );\n\n    useEffect(() => {\n        fetchFriendInfo();\n    }, [fetchFriendInfo]);\n\n    const isOnline = onlineUsers.includes(props.friendId);\n    const pendingChatCount = unreadChats[props.friendId] || 0;\n    const status = isOnline ? \"online\" : \"offline\";\n\n    function onClickHandler(e) {\n        if (!friend) return;\n        dispatch({\n            type: actions.SET_CHATTINGWITH,\n            chattingWith: friend,\n        });\n    }\n\n    return (\n        <div\n            className={\n                styles.FriendChatLink +\n                \" \" +\n                styles[status] +\n                \" \" +\n                (chattingWith?._id === props.friendId\n                    ? styles.chattingWith\n                    : \"\")\n            }\n            onClick={onClickHandler}\n        >\n            <div className={styles.userLinkLeft}>\n                <img src={friend?.photo} alt=\"Profile\" />\n                {\" \" + friend?.name + \" \"}\n            </div>\n            <div className={styles.friendChatInfo}>\n                <span className={styles.onlineIndicator}> </span>\n                &nbsp;&nbsp;&nbsp;\n                {pendingChatCount !== 0 && (\n                    <>\n                        <FaInfoCircle /> {pendingChatCount}\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default FriendChatLink;\n","import React, { useEffect, useState } from \"react\";\nimport FriendChatLink from \"./FriendChatLink\";\nimport styles from \"./css/AllFriendsChatList.module.scss\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport config from \"../../config\";\n\nfunction AllFriendsChatList(props) {\n    const lastChatTimes = useSelector(\n        (state) => state.chat.lastChatTimes,\n        shallowEqual\n    );\n\n    const [searchKey, setSearchKey] = useState(\"\");\n    const [friendNames, setFriendNames] = useState(undefined);\n\n    function compDates(id1, id2) {\n        if (lastChatTimes[id1] && !lastChatTimes[id2]) return -1;\n        if (!lastChatTimes[id1] && lastChatTimes[id2]) return 1;\n        if (!lastChatTimes[id1] && !lastChatTimes[id2]) return 0;\n\n        const time1 = new Date(lastChatTimes[id1]);\n        const time2 = new Date(lastChatTimes[id2]);\n\n        if (time1 > time2) return -1;\n        if (time1 < time2) return 1;\n        if (time1 === time2) return 0;\n    }\n\n    useEffect(() => {\n        async function fetchFriendNames() {\n            try {\n                const res = await axios({\n                    withCredentials: true,\n                    method: \"GET\",\n                    url: `${config.url}/api/friendships/getAllFriendNames`,\n                });\n\n                if (res.data.status === \"success\") {\n                    setFriendNames(res.data.friendNames);\n                } else throw new Error(res);\n            } catch (e) {}\n        }\n        fetchFriendNames();\n    }, []);\n\n    function searchKeyChanger(e) {\n        setSearchKey(e.target.value);\n    }\n\n    const friends = [...props.friends];\n\n    return (\n        <div className={styles.AllFriendsChatList}>\n            <div className={styles.sectionHeader}>\n                My Friends\n                <input\n                    className={styles.friendFilter}\n                    onChange={searchKeyChanger}\n                    placeholder=\"🔍 Filter by name\"\n                />\n            </div>\n            <div className={styles.userList}>\n                {friends\n                    .filter((fid) => {\n                        if (searchKey === \"\" || !friendNames) return true;\n                        return friendNames[fid]?.includes(\n                            searchKey.toLowerCase()\n                        );\n                    })\n                    .sort(compDates)\n                    .map((fid) => (\n                        <FriendChatLink key={fid} friendId={fid} />\n                    ))}\n                {friends.length === 0 && (\n                    <div className={styles.noFriendMessage}>\n                        You have no friends .Go to your profile and send friend\n                        requests to other users\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default AllFriendsChatList;\n","import React, { useContext, useEffect } from \"react\";\nimport styles from \"./css/Conversations.module.scss\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Chatbox from \"./ChatBox\";\nimport axios from \"axios\";\nimport config from \"../../config\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport { AppContext } from \"../../contextStore/appContext\";\nimport { actionCreators, actions } from \"../../reduxStore/index\";\nimport AllFriendsChatList from \"./AllFriendsChatList\";\nimport { MessageContext } from \"../../contextStore/messageContext\";\nimport { SpinnerCircular } from \"spinners-react\";\n\nfunction Conversations(props) {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const user = useSelector((state) => state.user.currentUser, shallowEqual);\n    const appCtx = useContext(AppContext);\n    const friends = useSelector((state) => state.user.friends, shallowEqual);\n    const { displayMessage } = useContext(MessageContext);\n\n    useEffect(() => {\n        if (!user) return;\n        dispatch(actionCreators.fetchFriends());\n        dispatch(actionCreators.fetchOnlineUsers());\n        dispatch(actionCreators.fetchUnreadChats());\n        dispatch(actionCreators.fetchLastChatTimes());\n    }, [dispatch, user]);\n\n    if (!user)\n        return (\n            <div className={styles.Conversations}>\n                <div className=\"spinner\">\n                    <SpinnerCircular className={\"spinner\"} enabled={!user} />\n                </div>\n            </div>\n        );\n\n    return (\n        <div className={styles.Conversations}>\n            <div className={styles.navbar}>\n                <div className={styles.pageHeader}>Conversations</div>\n                <div className={styles.activeUser}>\n                    <img src={user.photo} alt=\"Profile\" />\n                    <Link className={styles.profileLink} to=\"/myProfile\">\n                        {user.name}\n                    </Link>\n                </div>\n            </div>\n            <div className={styles.Container}>\n                {!appCtx.socket && <h1>Establishing live chat connection</h1>}\n                {appCtx.socket && !appCtx.socket.connected && (\n                    <div className={styles.notConnectedMessage}>\n                        {\" \"}\n                        You are not connected to the internet{\" \"}\n                    </div>\n                )}\n                {appCtx.socket && appCtx.socket?.connected && (\n                    <>\n                        <AllFriendsChatList friends={friends} />\n                        <Chatbox />\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Conversations;\n","import axios from \"axios\";\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport config from \"../../config\";\nimport { AppContext } from \"../../contextStore/appContext\";\nimport { MessageContext } from \"../../contextStore/messageContext\";\nimport { actions } from \"../../reduxStore\";\nimport styles from \"./css/AccountSection.module.scss\";\nimport Cropper from \"cropperjs\";\nimport \"cropperjs/dist/cropper.css\";\nimport { dataURItoBlob } from \"./getCroppedImage\";\nimport isEqual from \"lodash.isequal\";\nimport cloneDeep from \"clone-deep\";\nimport deepEqual from \"deep-equal\";\n\nlet cropper;\n\nfunction AccountSection(props) {\n    const currentUser = useSelector(\n        (state) => state.user.currentUser,\n        shallowEqual\n    );\n\n    const [formState, setFormState] = useState(\"display\");\n    const [isDeleteFormOpen, setIsDeleteFormOpen] = useState(false);\n    const [croppedImageUrl, setCroppedImageUrl] = useState(undefined);\n    const [loadCount, setLoadCount] = useState(0);\n    const [selectedImageUrl, setSelectedImageUrl] = useState(undefined);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const messageCtx = useContext(MessageContext);\n    const appCtx = useContext(AppContext);\n\n    const nameRef = useRef();\n    const emailRef = useRef();\n    const descriptionRef = useRef();\n    const passwordRef = useRef();\n    const overlayRef = useRef();\n    const cancelBtnRef = useRef();\n    const passwordDeleteRef = useRef();\n    const photoRef = useRef();\n    const cropperRef = useRef();\n\n    useEffect(() => {\n        const fetchUserInfo = async function () {\n            const res = await axios({\n                withCredentials: true,\n                method: \"GET\",\n                url: `${config.url}/api/users/getUserDetails/${currentUser._id}`,\n            });\n\n            if (res.data.status === \"success\") {\n                dispatch({ type: actions.SET_USER, user: res.data.user });\n            } else throw new Error(res);\n        };\n        fetchUserInfo();\n    }, [dispatch, currentUser._id]);\n\n    useEffect(() => {\n        if (formState === \"display\" || loadCount === 0) return;\n        if (cropper) cropper.destroy();\n        cropper = new Cropper(cropperRef.current, {\n            aspectRatio: 1,\n            zoomable: false,\n            scalable: false,\n            crop: () => {\n                const canvas = cropper.getCroppedCanvas();\n                setCroppedImageUrl(canvas.toDataURL());\n            },\n        });\n    }, [formState, loadCount]);\n\n    function openEditForm(e) {\n        e.preventDefault();\n        setFormState(\"edit\");\n    }\n\n    function cancelChanges(e) {\n        e.preventDefault();\n        if (cropper) cropper.destroy();\n        setLoadCount(0);\n        setFormState(\"display\");\n        setCroppedImageUrl(undefined);\n        setSelectedImageUrl(undefined);\n    }\n\n    const sendFormData = async (formData) => {\n        try {\n            messageCtx.displayMessage(\"Updating...\");\n            const res = await axios({\n                withCredentials: true,\n                method: \"PATCH\",\n                url: `${config.url}/api/users/editMyAccount`,\n                data: formData,\n            });\n            if (cropper) cropper.destroy();\n            setLoadCount(0);\n            setFormState(\"display\");\n            setSelectedImageUrl(undefined);\n            setCroppedImageUrl(undefined);\n\n            if (res.data.status === \"success\") {\n                messageCtx.displayMessage(\"Profile Updated\");\n                dispatch({ type: actions.SET_USER, user: res.data.user });\n            } else throw new Error(res);\n        } catch (e) {\n            messageCtx.displayMessage(e.response.data.message, true);\n        }\n    };\n\n    function sendEditData(e) {\n        e.preventDefault();\n        const form = new FormData();\n        form.append(\"name\", nameRef.current.value);\n        form.append(\"email\", emailRef.current.value);\n        form.append(\"description\", descriptionRef.current.value);\n        form.append(\"password\", passwordRef.current.value);\n        if (croppedImageUrl)\n            form.append(\"photo\", dataURItoBlob(croppedImageUrl));\n        sendFormData(form);\n    }\n\n    function photoChangeHandler() {\n        if (!photoRef.current.files[0]?.type.startsWith(\"image\"))\n            return messageCtx.displayMessage(\n                \"Please just upload image files\",\n                true\n            );\n        const imageUrl = URL.createObjectURL(photoRef.current.files[0]);\n        setCroppedImageUrl(imageUrl);\n        setSelectedImageUrl(imageUrl);\n    }\n\n    function openDeleteForm() {\n        setIsDeleteFormOpen(true);\n    }\n\n    function closeDeleteForm(e) {\n        if (\n            e.target === overlayRef.current ||\n            e.target === cancelBtnRef.current\n        )\n            setIsDeleteFormOpen(false);\n    }\n\n    const deleteAccountHandler = async (e) => {\n        try {\n            e.preventDefault();\n\n            await axios({\n                withCredentials: true,\n                method: \"DELETE\",\n                url: `${config.url}/api/users/deleteAccount`,\n                data: {\n                    password: passwordDeleteRef.current.value,\n                },\n            });\n\n            messageCtx.displayMessage(\"Account Deleted\");\n            dispatch({ type: actions.LOGOUT_USER });\n            history.replace(\"/\");\n            appCtx.removeSocket();\n        } catch (e) {\n            messageCtx.displayMessage(e.response.data.message, true);\n        }\n    };\n\n    function imageLoadHandler() {\n        setLoadCount((p) => p + 1);\n    }\n\n    return (\n        <div className={styles.AccountSection}>\n            <div className={styles.heading}>Account Details</div>\n            <div className={styles.content}>\n                <div className={styles.detailField}>\n                    <span>\n                        <b>Profile Pic : </b>\n                    </span>\n                    <br />\n                    {formState === \"display\" && (\n                        <img\n                            className={styles.profilePic}\n                            src={currentUser.photo}\n                            alt=\"Profile Pic\"\n                        />\n                    )}\n                    {formState === \"edit\" && (\n                        <>\n                            <img\n                                className={styles.croppedPic}\n                                src={croppedImageUrl}\n                                alt=\"Cropped Preview\"\n                            />\n                            <br />\n                            <div className={styles.cropperContainer}>\n                                <img\n                                    ref={cropperRef}\n                                    src={selectedImageUrl}\n                                    alt=\"Nothing selected\"\n                                    className={styles.cropper}\n                                    onLoad={imageLoadHandler}\n                                />\n                            </div>\n                            <input\n                                onChange={photoChangeHandler}\n                                ref={photoRef}\n                                accept=\"image/*\"\n                                type=\"file\"\n                            />\n                        </>\n                    )}\n                </div>\n                <div className={styles.detailField}>\n                    <span>\n                        <b>Name : </b>\n                    </span>\n                    {formState === \"display\" && currentUser.name}\n                    {formState === \"edit\" && (\n                        <input ref={nameRef} placeholder={currentUser.name} />\n                    )}\n                </div>\n                <div className={styles.detailField}>\n                    <span>\n                        <b>Email : </b>\n                    </span>\n                    {formState === \"display\" && currentUser.email}\n                    {formState === \"edit\" && (\n                        <input ref={emailRef} placeholder={currentUser.email} />\n                    )}\n                </div>\n                <div className={styles.detailField}>\n                    <span>\n                        <b>Description : </b>\n                    </span>\n                    {formState === \"display\" && currentUser.description}\n                    {formState === \"edit\" && (\n                        <input\n                            ref={descriptionRef}\n                            placeholder={currentUser.description}\n                        />\n                    )}\n                </div>\n                {formState === \"edit\" && (\n                    <>\n                        <div>\n                            <span>\n                                <b>Password </b>\n                            </span>\n                            <input\n                                ref={passwordRef}\n                                placeholder=\"Current Password required to edit profile\"\n                            />\n                        </div>\n                        <button onClick={cancelChanges}>Cancel</button>\n                        <button onClick={sendEditData}>Save changes</button>\n                    </>\n                )}\n                {formState === \"display\" && (\n                    <button onClick={openEditForm}>Edit Account</button>\n                )}\n\n                {formState === \"display\" && (\n                    <button onClick={openDeleteForm}>Delete Account</button>\n                )}\n                {isDeleteFormOpen && (\n                    <div\n                        ref={overlayRef}\n                        onClick={closeDeleteForm}\n                        className={styles.overlay}\n                    >\n                        <form\n                            onSubmit={deleteAccountHandler}\n                            className={styles.deleteForm}\n                        >\n                            Enter your password to confirm delete\n                            <input\n                                ref={passwordDeleteRef}\n                                placeholder=\"Password required\"\n                            />\n                            <button\n                                className={styles.deleteFormBtn}\n                                ref={cancelBtnRef}\n                                onClick={closeDeleteForm}\n                                type=\"button\"\n                            >\n                                Cancel\n                            </button>\n                            <button type=\"submit\">Confirm</button>\n                        </form>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default AccountSection;\n","// https://stackoverflow.com/questions/4998908/convert-data-uri-to-file-then-append-to-formdata\n\nexport function dataURItoBlob(dataURI) {\n    // convert base64/URLEncoded data component to raw binary data held in a string\n    var byteString;\n    if (dataURI.split(\",\")[0].indexOf(\"base64\") >= 0)\n        byteString = atob(dataURI.split(\",\")[1]);\n    else byteString = unescape(dataURI.split(\",\")[1]);\n\n    // separate out the mime component\n    var mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n\n    // write the bytes of the string to a typed array\n    var ia = new Uint8Array(byteString.length);\n    for (var i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n    }\n\n    return new Blob([ia], { type: mimeString });\n}\n","import axios from \"axios\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport config from \"../../config\";\nimport { MessageContext } from \"../../contextStore/messageContext\";\nimport styles from \"./css/NonFriend.module.scss\";\nimport { MyProfileContext } from \"./MyProfile\";\n\nfunction NonFriend(props) {\n    const [nonFriend, setNonFriend] = useState(undefined);\n\n    const { changeRenderToken } = useContext(MyProfileContext);\n    const { displayMessage } = useContext(MessageContext);\n\n    useEffect(() => {\n        const fetchUserInfo = async function () {\n            try {\n                const res = await axios({\n                    withCredentials: true,\n                    method: \"GET\",\n                    url: `${config.url}/api/users/getUserDetails/${props.userId}`,\n                });\n\n                if (res.data.status === \"success\") {\n                    setNonFriend(res.data.user);\n                } else throw new Error(res);\n            } catch (e) {\n                displayMessage(\"Unable to fetch user info\", true);\n            }\n        };\n        fetchUserInfo();\n    }, [props.userId, displayMessage]);\n\n    const sendFriendRequest = async function (e) {\n        try {\n            e.preventDefault();\n            if (!nonFriend)\n                return displayMessage(\"User hasnt loaded yet\", true);\n            const res = await axios({\n                withCredentials: true,\n                method: \"POST\",\n                url: `${config.url}/api/friendships/sendFriendRequest`,\n                data: {\n                    targetId: props.userId,\n                },\n            });\n\n            if (res.data.status === \"success\") {\n                displayMessage(\"Friend Request send\");\n                await props.fetchNonFriends();\n                changeRenderToken();\n            } else throw new Error(res);\n        } catch (e) {\n            displayMessage(\n                e.response?.data.message + \" Couldnt send friend request\",\n                true\n            );\n        }\n    };\n\n    return (\n        <div className={styles.NonFriend}>\n            <div className={styles.leftSide}>\n                <img alt=\"DP\" src={nonFriend?.photo} />\n                {nonFriend?.name || \"Loading\"}\n            </div>\n            <button onClick={sendFriendRequest}>Request</button>\n        </div>\n    );\n}\n\nexport default NonFriend;\n","import axios from \"axios\";\nimport React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport config from \"../../config\";\nimport { MessageContext } from \"../../contextStore/messageContext\";\nimport styles from \"./css/AllNonFriends.module.scss\";\nimport { MyProfileContext } from \"./MyProfile\";\nimport NonFriend from \"./NonFriend\";\n\nfunction AllNonFriends(props) {\n    const [nonFriendList, setNonFriendList] = useState([]);\n\n    const { renderToken } = useContext(MyProfileContext);\n    const { displayMessage } = useContext(MessageContext);\n\n    const fetchNonFriends = useCallback(\n        async function () {\n            try {\n                const res = await axios({\n                    withCredentials: true,\n                    method: \"GET\",\n                    url: `${config.url}/api/friendships/getAllNonFriends`,\n                });\n\n                if (res.data.status === \"success\") {\n                    setNonFriendList(res.data.nonFriends);\n                } else throw new Error(res);\n            } catch (e) {\n                displayMessage(e.response.data.message, true);\n            }\n        },\n        [displayMessage]\n    );\n\n    useEffect(() => {\n        fetchNonFriends();\n    }, [fetchNonFriends, renderToken]);\n\n    return (\n        <div className={styles.AllNonFriends}>\n            <div className={styles.listHeading}>All Users</div>\n            <div className={styles.nonFriendsList}>\n                {nonFriendList.map((id) => (\n                    <NonFriend\n                        key={id}\n                        userId={id}\n                        fetchNonFriends={fetchNonFriends}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default AllNonFriends;\n","import axios from \"axios\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport config from \"../../config\";\nimport { MessageContext } from \"../../contextStore/messageContext\";\nimport { actionCreators } from \"../../reduxStore\";\nimport styles from \"./css/Friend.module.scss\";\nimport { MyProfileContext } from \"./MyProfile\";\n\nfunction Friend(props) {\n    const [friend, setFriend] = useState(undefined);\n    const dispatch = useDispatch();\n    const { displayMessage } = useContext(MessageContext);\n    const { changeRenderToken } = useContext(MyProfileContext);\n\n    useEffect(() => {\n        const fetchUserInfo = async function () {\n            try {\n                const res = await axios({\n                    withCredentials: true,\n                    method: \"GET\",\n                    url: `${config.url}/api/users/getUserDetails/${props.userId}`,\n                });\n\n                if (res.data.status === \"success\") {\n                    setFriend(res.data.user);\n                } else throw new Error(res);\n            } catch (e) {\n                displayMessage(\"Failed to fetch friend info\", true);\n            }\n        };\n        fetchUserInfo();\n    }, [props.userId, displayMessage]);\n\n    const deleteFriend = async function (e) {\n        try {\n            e.preventDefault();\n            if (!friend) return displayMessage(\"Friend loading\", true);\n            const res = await axios({\n                withCredentials: true,\n                method: \"DELETE\",\n                url: `${config.url}/api/friendships/deleteFriend`,\n                data: {\n                    friendId: friend._id,\n                },\n            });\n\n            if (res.data.status === \"success\") {\n                displayMessage(\"Friend Deleted\");\n                await dispatch(actionCreators.fetchFriends());\n                changeRenderToken();\n            } else throw new Error(res);\n        } catch (e) {\n            displayMessage(\n                \"Failed to delete friend \" + e.response?.data.message,\n                true\n            );\n        }\n    };\n\n    return (\n        <div className={styles.Friend}>\n            <div className={styles.leftSide}>\n                <img src={friend?.photo} alt=\"profile\" />\n                {friend?.name || \"loading\"}\n            </div>\n            <button className={styles.negativeBtn} onClick={deleteFriend}>\n                Delete\n            </button>\n        </div>\n    );\n}\n\nexport default Friend;\n","import React, { useEffect, useContext } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators } from \"../../reduxStore\";\nimport styles from \"./css/MyFriends.module.scss\";\nimport Friend from \"./Friend\";\nimport { MyProfileContext } from \"./MyProfile\";\n\nfunction MyFriends(props) {\n    const friends = useSelector((state) => state.user.friends, shallowEqual);\n    const dispatch = useDispatch();\n\n    const { renderToken } = useContext(MyProfileContext);\n\n    useEffect(() => {\n        dispatch(actionCreators.fetchFriends());\n    }, [dispatch, renderToken]);\n\n    return (\n        <div className={styles.MyFriends}>\n            <div className={styles.listHeading}>My Friends</div>\n            <div className={styles.friendsList}>\n                {friends.map((id) => (\n                    <Friend key={id} userId={id} />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default MyFriends;\n","import axios from \"axios\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport config from \"../../config\";\nimport { MessageContext } from \"../../contextStore/messageContext\";\nimport styles from \"./css/PendingRequest.module.scss\";\nimport { MyProfileContext } from \"./MyProfile\";\n\nfunction PendingRequest(props) {\n    const [sender, setSender] = useState(undefined);\n\n    const { changeRenderToken } = useContext(MyProfileContext);\n    const { displayMessage } = useContext(MessageContext);\n\n    useEffect(() => {\n        const fetchSenderInfo = async function () {\n            try {\n                const res = await axios({\n                    withCredentials: true,\n                    method: \"GET\",\n                    url: `${config.url}/api/users/getUserDetails/${props.request.sender}`,\n                });\n\n                if (res.data.status === \"success\") {\n                    setSender(res.data.user);\n                } else throw new Error(res);\n            } catch (e) {\n                displayMessage(\"Failed to load friend request sender\", true);\n            }\n        };\n        fetchSenderInfo();\n    }, [props.request.sender, displayMessage]);\n\n    const acknowledgeFriendRequest = async function (type, e) {\n        try {\n            e.preventDefault();\n            if (!sender) return displayMessage(`Request loading details`, true);\n            const res = await axios({\n                withCredentials: true,\n                method: \"POST\",\n                url: `${config.url}/api/friendships/acknowledgeFriendRequest/${props.request._id}`,\n                data: {\n                    type,\n                },\n            });\n\n            if (res.data.status === \"success\") {\n                displayMessage(`Friend request ${type}ed`);\n                await props.getPendingFriendRequests();\n                changeRenderToken();\n            } else throw new Error(res);\n        } catch (e) {\n            displayMessage(\n                `Friend request ${type} failed ` + e.response?.data.message,\n                true\n            );\n        }\n    };\n\n    return (\n        <div className={styles.PendingRequest}>\n            <div className={styles.leftSide}>\n                <img src={sender?.photo} alt=\"DP\" />\n                {sender?.name || \"loading\"}\n            </div>\n            <div>\n                <button onClick={acknowledgeFriendRequest.bind(null, \"accept\")}>\n                    Accept\n                </button>\n                <button\n                    className={styles.negativeBtn}\n                    onClick={acknowledgeFriendRequest.bind(null, \"reject\")}\n                >\n                    Reject\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default PendingRequest;\n","import axios from \"axios\";\nimport React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport config from \"../../config\";\nimport { MessageContext } from \"../../contextStore/messageContext\";\nimport styles from \"./css/PendingRequestList.module.scss\";\nimport { MyProfileContext } from \"./MyProfile\";\nimport PendingRequest from \"./PendingRequest\";\n\nfunction PendingRequestList(props) {\n    const [requestList, setRequestList] = useState([]);\n    const { displayMessage } = useContext(MessageContext);\n    const { renderToken } = useContext(MyProfileContext);\n\n    const getPendingFriendRequests = useCallback(\n        async function () {\n            try {\n                const res = await axios({\n                    withCredentials: true,\n                    method: \"GET\",\n                    url: `${config.url}/api/friendships/getPendingFriendRequests`,\n                });\n\n                if (res.data.status === \"success\") {\n                    setRequestList(res.data.pendingRequests);\n                } else throw new Error(res);\n            } catch (e) {\n                displayMessage(\"Failed to fetch Pending requests\", true);\n            }\n        },\n        [displayMessage]\n    );\n\n    useEffect(() => {\n        getPendingFriendRequests();\n    }, [getPendingFriendRequests, renderToken]);\n\n    return (\n        <div className={styles.PendingRequestList}>\n            <div className={styles.listHeading}>Pending Friend Requests</div>\n            <div className={styles.requestList}>\n                {requestList.map((r) => (\n                    <PendingRequest\n                        key={r._id}\n                        request={r}\n                        getPendingFriendRequests={getPendingFriendRequests}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default PendingRequestList;\n","import axios from \"axios\";\nimport React, { useState, useContext, useCallback } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport config from \"../../config\";\nimport { AppContext } from \"../../contextStore/appContext\";\nimport { MessageContext } from \"../../contextStore/messageContext\";\nimport { actions } from \"../../reduxStore\";\nimport AccountSection from \"./AccountSections\";\nimport AllNonFriends from \"./AllNonFriends\";\nimport styles from \"./css/MyProfile.module.scss\";\nimport MyFriends from \"./MyFriends\";\nimport PendingRequestList from \"./PendingRequestList\";\nimport { FaInfoCircle } from \"react-icons/fa\";\nimport { SpinnerCircular } from \"spinners-react\";\n\nconst MyProfileContext = React.createContext({\n    renderToken: null,\n    changeRenderToken: () => {},\n});\n\nfunction MyProfile(props) {\n    const currentUser = useSelector(\n        (state) => state.user.currentUser,\n        shallowEqual\n    );\n    const unreadChats = useSelector(\n        (state) => state.chat.unreadChats,\n        shallowEqual\n    );\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const appCtx = useContext(AppContext);\n    const [renderToken, setRenderToken] = useState(0);\n    const { displayMessage } = useContext(MessageContext);\n\n    const logoutHandler = async function (e) {\n        try {\n            e.preventDefault();\n            const res = await axios({\n                withCredentials: true,\n                method: \"GET\",\n                url: `${config.url}/api/users/logout`,\n            });\n\n            if (res.data.status === \"success\") {\n                dispatch({ type: actions.LOGOUT_USER });\n                history.replace(\"/\");\n                appCtx.removeSocket();\n            } else throw new Error(res);\n        } catch (e) {\n            displayMessage(\n                \"Failed to logout \" + e.response?.data.message,\n                true\n            );\n        }\n    };\n\n    const changeRenderToken = useCallback(() => {\n        setRenderToken((prev) => 1 - prev);\n    }, []);\n\n    if (!currentUser)\n        return (\n            <div className={styles.MyProfile}>\n                <div className=\"spinner\">\n                    <SpinnerCircular\n                        className={\"spinner\"}\n                        enabled={!currentUser}\n                    />\n                </div>{\" \"}\n            </div>\n        );\n\n    const totalUnreadChats = Object.values(unreadChats).reduce(\n        (sum, e) => sum + e,\n        0\n    );\n\n    return (\n        <div className={styles.MyProfile}>\n            <div className={styles.navbar}>\n                <Link className={styles.navBarBtn} to=\"/conversations\">\n                    {\"Conversations \"}\n                    {totalUnreadChats !== 0 && (\n                        <>\n                            &nbsp;\n                            <FaInfoCircle />\n                            {\" \" + totalUnreadChats}\n                        </>\n                    )}\n                </Link>\n                <button className={styles.navBarBtn} onClick={logoutHandler}>\n                    Logout\n                </button>\n            </div>\n            <div className={styles.content}>\n                <div className={styles.friendSection}>\n                    <div className={styles.heading}>Friend Section</div>\n                    <div className={styles.friendSectionFlexContainer}>\n                        <MyProfileContext.Provider\n                            value={{ renderToken, changeRenderToken }}\n                        >\n                            <AllNonFriends />\n                            <MyFriends />\n                            <PendingRequestList />\n                        </MyProfileContext.Provider>\n                    </div>\n                </div>\n                <AccountSection />\n            </div>\n        </div>\n    );\n}\n\nexport default MyProfile;\nexport { MyProfileContext };\n","import axios from \"axios\";\nimport React, { useContext, useRef } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport config from \"../../config\";\nimport { MessageContext } from \"../../contextStore/messageContext\";\nimport styles from \"./css/PasswordReset.module.scss\";\n\nfunction PasswordReset(props) {\n    const newPasswordRef = useRef();\n    const newPasswordConfirmRef = useRef();\n\n    const history = useHistory();\n\n    const params = useParams();\n    const messageCtx = useContext(MessageContext);\n\n    const submitNewPassword = async (e) => {\n        try {\n            e.preventDefault();\n\n            const res = await axios({\n                withCredentials: true,\n                method: \"PATCH\",\n                url: `${config.url}/api/users/resetPassword/${params.passwordResetToken}`,\n                data: {\n                    password: newPasswordRef.current.value,\n                    passwordConfirm: newPasswordConfirmRef.current.value,\n                },\n            });\n\n            if (res.data.status === \"success\") {\n                messageCtx.displayMessage(\"Password Successfully changed \");\n                history.replace(\"/\");\n            }\n        } catch (e) {\n            messageCtx.displayMessage(e.response.data.message, true);\n        }\n    };\n\n    return (\n        <div className={styles.PasswordReset}>\n            <form onSubmit={submitNewPassword}>\n                <b>Password Reset</b>\n                <input ref={newPasswordRef} placeholder=\"New Password\" />\n                <input\n                    ref={newPasswordConfirmRef}\n                    placeholder=\"New Password Confirm\"\n                />\n                <button>Reset Paassword</button>\n            </form>\n        </div>\n    );\n}\n\nexport default PasswordReset;\n","import \"./App.scss\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport LandingPage from \"./pages/landingPage/LandingPage\";\nimport Conversations from \"./pages/conversations/Conversations\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators, actions } from \"./reduxStore\";\nimport { AppContext } from \"./contextStore/appContext\";\nimport MyProfile from \"./pages/myProfile/MyProfile\";\nimport PasswordReset from \"./pages/PasswordReset/PasswordReset\";\nimport isEqual from \"lodash.isequal\";\nimport { SpinnerCircular } from \"spinners-react\";\n\nfunction App() {\n    const dispatch = useDispatch();\n    const { initializeNewSocket } = useContext(AppContext);\n    const currentUser = useSelector((state) => state.user.currentUser, isEqual);\n    const location = useLocation();\n    const [loadingUser, setLoadingUser] = useState(\n        !location.pathname.includes(\"resetPassword\")\n    );\n\n    useEffect(() => {\n        if (!location.pathname.includes(\"resetPassword\")) {\n            dispatch(actionCreators.tryFetchUserByStorageToken())\n                .then(() => setLoadingUser(false))\n                .catch(() => {\n                    setLoadingUser(false);\n                    dispatch({ type: actions.LOGOUT_USER });\n                });\n        }\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (currentUser) initializeNewSocket();\n    }, [currentUser, initializeNewSocket]);\n\n    if (loadingUser)\n        return (\n            <div className=\"spinner\">\n                <SpinnerCircular className={\"spinner\"} enabled={loadingUser} />\n            </div>\n        );\n\n    return (\n        <div className=\"App\">\n            <Switch>\n                <Route path=\"/\" exact component={LandingPage} />\n                <Route path=\"/conversations\" exact component={Conversations} />\n                <Route path=\"/myProfile\" exact component={MyProfile} />\n                <Route\n                    path=\"/resetPassword/:passwordResetToken\"\n                    exact\n                    component={PasswordReset}\n                />\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./reduxStore/index\";\nimport { AppContextProvider } from \"./contextStore/appContext\";\nimport { MessageContextProvider } from \"./contextStore/messageContext\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <MessageContextProvider>\n            <AppContextProvider>\n                <BrowserRouter>\n                    <App />\n                </BrowserRouter>\n            </AppContextProvider>\n        </MessageContextProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n","function catchAsync(f) {\n    return (...args) => {\n        return f(...args).catch((e) => {\n            // console.log(e.response);\n        });\n    };\n}\n\nmodule.exports = catchAsync;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyProfile\":\"MyProfile_MyProfile__2ySoo\",\"navbar\":\"MyProfile_navbar__3iNbE\",\"navBarBtn\":\"MyProfile_navBarBtn__170iT\",\"content\":\"MyProfile_content__KunNE\",\"friendSection\":\"MyProfile_friendSection__WsbPJ\",\"heading\":\"MyProfile_heading__39Ul2\",\"friendSectionFlexContainer\":\"MyProfile_friendSectionFlexContainer__2FMjK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Conversations\":\"Conversations_Conversations__1C3_0\",\"navbar\":\"Conversations_navbar__LriyT\",\"pageHeader\":\"Conversations_pageHeader__1XPZ5\",\"activeUser\":\"Conversations_activeUser__13znk\",\"profileLink\":\"Conversations_profileLink__2N8tR\",\"allUsers\":\"Conversations_allUsers__1Bavo\",\"Container\":\"Conversations_Container__1Ew7K\",\"notConnectedMessage\":\"Conversations_notConnectedMessage__21g_d\",\"userList\":\"Conversations_userList__2r2Jl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendChatLink\":\"FriendChatLink_FriendChatLink__2HNVX\",\"chattingWith\":\"FriendChatLink_chattingWith__hCZAO\",\"userLinkLeft\":\"FriendChatLink_userLinkLeft__AOFjA\",\"friendChatInfo\":\"FriendChatLink_friendChatInfo__3qMM1\",\"onlineIndicator\":\"FriendChatLink_onlineIndicator__1Ljf9\",\"onlineText\":\"FriendChatLink_onlineText__3vOcL\",\"online\":\"FriendChatLink_online__1GI5T\",\"offline\":\"FriendChatLink_offline__3DLL7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Chat_chatContainer__3ad6y\",\"Chat\":\"Chat_Chat__Pq_Hw\",\"chatContent\":\"Chat_chatContent__5ItBb\",\"chatTime\":\"Chat_chatTime__vW_F9\",\"other\":\"Chat_other__CFtye\",\"me\":\"Chat_me__2hYTr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllFriendsChatList\":\"AllFriendsChatList_AllFriendsChatList__HWlEK\",\"sectionHeader\":\"AllFriendsChatList_sectionHeader__184UO\",\"friendFilter\":\"AllFriendsChatList_friendFilter__2Py5r\",\"userList\":\"AllFriendsChatList_userList__1eEW4\",\"noFriendMessage\":\"AllFriendsChatList_noFriendMessage__3sXEm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LandingPage\":\"LandingPage_LandingPage__2CFiz\",\"container\":\"LandingPage_container__3x6z_\",\"buttonContainer\":\"LandingPage_buttonContainer__2Vkf1\",\"iconCredits\":\"LandingPage_iconCredits__2FBh9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__QbclZ\",\"CloseBtn\":\"Message_CloseBtn__13vvQ\",\"errorMessage\":\"Message_errorMessage__1ynAq\",\"normalMessage\":\"Message_normalMessage__1ohMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllNonFriends\":\"AllNonFriends_AllNonFriends__TA46F\",\"listHeading\":\"AllNonFriends_listHeading__o5OBY\",\"nonFriendsList\":\"AllNonFriends_nonFriendsList__6wS17\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyFriends\":\"MyFriends_MyFriends__2k6Hx\",\"listHeading\":\"MyFriends_listHeading__3Gw8L\",\"friendList\":\"MyFriends_friendList__15Xcp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Friend\":\"Friend_Friend__2SYsy\",\"leftSide\":\"Friend_leftSide__251CC\",\"negativeBtn\":\"Friend_negativeBtn__22SnI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PendingRequestList\":\"PendingRequestList_PendingRequestList__cJIUs\",\"listHeading\":\"PendingRequestList_listHeading__5a1kv\",\"requestList\":\"PendingRequestList_requestList__3kCm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PendingRequest\":\"PendingRequest_PendingRequest__4EhXp\",\"leftSide\":\"PendingRequest_leftSide__2uhQo\",\"negativeBtn\":\"PendingRequest_negativeBtn__HCIYA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NonFriend\":\"NonFriend_NonFriend__Ny7qA\",\"leftSide\":\"NonFriend_leftSide__2_luz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccountSection\":\"AccountSection_AccountSection__1xA4I\",\"heading\":\"AccountSection_heading__10cfM\",\"content\":\"AccountSection_content__2ihkc\",\"detailField\":\"AccountSection_detailField__1rLPg\",\"profilePic\":\"AccountSection_profilePic__1Kq8G\",\"croppedPic\":\"AccountSection_croppedPic__2ow0u\",\"cropperContainer\":\"AccountSection_cropperContainer__2za6g\",\"cropper\":\"AccountSection_cropper__2j3nY\",\"overlay\":\"AccountSection_overlay__164Fu\",\"deleteForm\":\"AccountSection_deleteForm__Nl6go\"};"],"sourceRoot":""}